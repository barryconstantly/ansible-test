---
- name: NetIM Rollback Playbook
  hosts: NetIM
  gather_facts: no

# Variables passed via JSON from Flask
# dev_name
# deviced_archive_file_path

  tasks:
  - name: NetIM Rollback Request (to Ansible REST API)
    # Only run for NetIM
    when: "'NetIMGroup' in group_names"
    # debug: prints to Ansible command line screen
    debug:
      msg: 
        - "NetIM Requested a Rollback for {{ dev_name }}, will retrieve the previous config file"
        - "from this NetIM path {{ device_archive_file_path }}"

  - name: Retrieve Rollback Config File from NetIM (to NetIM REST API)
    when: "'NetIMGroup' in group_names"
    # debug: prints to Ansible command line screen
    debug:
      msg: "Retrieved previous config file from NetIM for {{ dev_name }}"
      
  - name: Access NetIM REST API to retrieve config file
    when: "'NetIMGroup' in group_names"
    ignore_errors: true
    uri:
      # deviced_archive_file_path looks like this '/api/netim/v1/archives/281533/file'
      url: "https://10.1.150.232:8543 {{device_archive_file_path}} "
      method: GET
      url_username: scadmin
      url_password: R3st0nVA
      force_basic_auth: yes
      validate_certs: no
      # This forces content to be returned, if not specified and JSON is present, then JSON will be returned
      return_content: yes
      status_code: 200
      # This writes the output to a file named 'config.txt'
      # Since this AWX and Docker, the actual location is in a Docker folder somewhere..
      dest: /tmp/config.txt
    # Ansible uses register to specify a variable name and it is implicit to the output of the uri:
    # Notice it is NOT indented, at same indent level as uri:
    register: rest_get
    
  # This is debug test to see the config file text on the Ansible console screen
  - name: NetIM Rollback Request (to Ansible REST API)
    # Only run for NetIM
    when: "'NetIMGroup' in group_names"
    debug: 
      msg: "The output of the config file is {{lookup('file', '/tmp/config.txt') }}"
  

  # I got frustrated trying to read in the file and parse with Ansible so cheating with Python..
  - name: Remove some lines from the config file (header and footer)
    when: "'NetIMGroup' in group_names"
    script: "/usr/bin/python config_strip.py"

####################################
## Only run these tasks for Cisco ##
#################################### 

# This is elevated enable mode, note that the other script with 'show run' works which also uses
# elevated mode..
  - name: IOS configuration source example
    when: "'Cisco' in group_names"
    ios_config:
        src: "/tmp/config.txt"
